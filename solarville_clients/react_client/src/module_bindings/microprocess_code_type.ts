// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ProductType,
  ProductTypeElement,
  SumType,
  SumTypeVariant,
  Timestamp,
} from "@clockworklabs/spacetimedb-sdk";

// Import types this type depends on
import { Timestamp as Timestamp_IGNORE } from "@clockworklabs/spacetimedb-sdk";

/**
 * Client-side representation of MicroprocessCode table from the server
 */
export class MicroprocessCode {
  constructor(
    public code_id: number,
    public owner_id: number,
    public name: string,
    public file_path: string,
    public code_content: string,
    public last_updated: Timestamp,
  ) {}

  static getTypeScriptAlgebraicType(): AlgebraicType {
    return new ProductType([
      new ProductTypeElement("code_id", AlgebraicType.createPrimitive("u32")),
      new ProductTypeElement("owner_id", AlgebraicType.createPrimitive("u32")),
      new ProductTypeElement("name", AlgebraicType.createPrimitive("String")),
      new ProductTypeElement("file_path", AlgebraicType.createPrimitive("String")),
      new ProductTypeElement("code_content", AlgebraicType.createPrimitive("String")),
      new ProductTypeElement("last_updated", AlgebraicType.createPrimitive("Timestamp")),
    ]);
  }

  static fromAlgebraicValue(value: AlgebraicValue): MicroprocessCode {
    const elements = value.getElementsOfProductValue();
    const code_id = elements[0].getValueAsU32();
    const owner_id = elements[1].getValueAsU32();
    const name = elements[2].getValueAsString();
    const file_path = elements[3].getValueAsString();
    const code_content = elements[4].getValueAsString();
    const last_updated = elements[5].getValueAsTimestamp();
    return new MicroprocessCode(code_id, owner_id, name, file_path, code_content, last_updated);
  }
}
